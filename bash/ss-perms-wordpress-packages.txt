#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: littlebizzy/slickstack/blob/master/bash/ss-perms-wordpress-packages.txt ###############
#### path: /var/www/ss-perms-wordpress-packages ####################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Resets file and user permissions for WordPress module files and folders ##############
#### module version: WordPress 6.6.x ###############################################################
#### sourced by: ss-install-wordpress-packages, ss-perms ###########################################
#### bash aliases: ss perms wordpress|wp packages ##################################################
####################################################################################################

####################################################################################################
#### TABLE OF CONTENTS (SS-Perms-WordPress-Packages) ###############################################
####################################################################################################

## this is a brief summary of the different code snippets you will find in this script ##
## each section should be commented so you understand what is being accomplished ##

## A. Source SS-Config + SS-Functions
## B. Touch Timestamp File
## C. Message (Begin Script)
## D. Reset Permissions (WordPress Packages)

####################################################################################################
#### A. SS-Perms-WordPress-Packages: Source SS-Config + SS-Functions ###############################
####################################################################################################

## before anything else we must source the critical variables that power this script ##
## ss-config is setup during ss-install wizard but ss-functions is hardcoded ##

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### B. SS-Perms-WordPress-Packages: Touch Timestamp File ##########################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

ss_touch "${TIMESTAMP_SS_PERMS_WORDPRESS_PACKAGES}"

####################################################################################################
#### C. SS-Perms-WordPress-Packages: Message (Begin Script) ########################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be seen by sudo users who manually run this script in the shell ##

ss_echo "${COLOR_INFO}Running ss-perms-wordpress-packages... ${COLOR_RESET}"

####################################################################################################
#### D. SS-Perms-WordPress-Packages: Reset Permissions (WordPress Packages) ########################
####################################################################################################

## here we briefly reset permissions for WordPress Core files only to avoid errors etc ##
## keep in mind that non-WordPress Core files are not affected by this snippet ##

## all environments ##
ss_chown "${SFTP_USER}":slickstack /var/www/html
chmod 0775 /var/www/html ## must be 0775 (0755 not enough)
find /var/www/html/ -type d -exec chmod 0775 {} \; ## must be 0775 (0755 not enough)

## only reset perms for ALL public files if website is not massive ##
## https://unix.stackexchange.com/questions/376075/explain-finds-path-and-prune-options ##
if [[ "${SS_MASSIVE_SITE}" != "true" ]]; then 
    find /var/www/html/ -type f -exec chmod 0664 {} + ## must be 0664 (0644 not enough)
else 
    find /var/www/html/ -path /var/www/html/wp-content/uploads -prune -o -type f -exec chmod 0664 {} + ## must be 0664 (0644 not enough)
fi

## production ##
ss_mkdir /var/www/html/wp-content
ss_mkdir /var/www/html/wp-content/temp
ss_mkdir /var/www/html/wp-content/upgrade
ss_mkdir /var/www/html/wp-content/uploads
ss_mkdir /var/www/html/wp-content/upgrade-temp-backup

## staging ##
if [[ "${STAGING_SITE}" != "false" ]]; then 
    ss_mkdir /var/www/html/staging
    ss_mkdir /var/www/html/staging/wp-content/temp
    ss_mkdir /var/www/html/staging/wp-content/upgrade
    ss_mkdir /var/www/html/staging/wp-content/upgrade-temp-backup

    ## create uploads symlink if does not exist ##
    if [[ ! -L "${PATH_WORDPRESS_UPLOADS_STAGING}" ]]; then
        ss_rm "${PATH_WORDPRESS_UPLOADS_STAGING}"
        ss_ln "${PATH_WORDPRESS_UPLOADS_PRODUCTION}" "${PATH_WORDPRESS_UPLOADS_STAGING}"
    fi
fi

## development ##
if [[ "${DEV_SITE}" != "false" ]]; then 
    ss_mkdir /var/www/html/dev
    ss_mkdir /var/www/html/dev/wp-content/temp
    ss_mkdir /var/www/html/dev/wp-content/upgrade
    ss_mkdir /var/www/html/dev/wp-content/uploads
    ss_mkdir /var/www/html/dev/wp-content/upgrade-temp-backup
fi

####################################################################################################
#### SlickStack: Reset Permissions (SlickStack Scripts) ############################################
####################################################################################################

## we include this permissions reset in all cron jobs and bash scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute any SlickStack scripts ##

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS
## SNIPPET: ss bash scripts, ss cron jobs
## UPDATED: 02JUL2022

chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chown root:root /var/www/crons/custom/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/custom/*cron* ## 0700 means only root/sudo can execute

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://stackoverflow.com/questions/10062513/install-wordpress-using-bash-shell-without-visiting-wp-admin-install-php
## Ref: https://github.com/littlebizzy/throwaway-theme/blob/master/functions.php
## Ref: https://docs.bitnami.com/ibm/apps/wordpress-pro/administration/understand-file-permissions/
## Ref: https://unix.stackexchange.com/questions/376075/explain-finds-path-and-prune-options

## SS_EOF
