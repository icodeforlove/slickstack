#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: littlebizzy/slickstack/blob/master/bash/ss-install-wordpress-packages.txt #############
#### path: /var/www/ss-install-wordpress-packages ##################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Reinstalls the WordPress module packages and non-config files (idempotent) ###########
#### module version: WordPress 6.5.x ###############################################################
#### sourced by: ss-install ########################################################################
#### bash aliases: ss install wordpress|wp packages ################################################
####################################################################################################

## SS-CONFIG MUST BE PROPERLY CONFIGURED AND ON CURRENT BUILD BEFORE RUNNING SS-INSTALL ##
## ENSURE YOUR SS-CONFIG BUILD REMAINS CURRENT BY RUNNING SS-UPDATE OCCASIONALLY ##

####################################################################################################
#### TABLE OF CONTENTS (SS-Install-WordPress-Packages) #############################################
####################################################################################################

## this is a brief summary of the different code snippets you will find in this script ##
## each section should be commented so you understand what is being accomplished ##

## A. Source SS-Config + SS-Functions
## B. Touch Timestamp File
## C. Message (Begin Script)
## D. Install Ubuntu Utils
## E. Retrieve WordPress Core Zip File
## F. Install WordPress Core (Production)
## G. Install WordPress Core (Staging)
## H. Install WordPress Core (Development)
## I. Install HoverCraft WordPress Theme

## J. Populate Production Database (Conditional)
## K. Populate Development Database (Conditional)

## K. Modify Site Domains In Database
## L. Sync Production Database To Staging
## M. Cleanup Temporary Files
## N. Purge Cache (PHP OPcache)
## O. Reset Permissions (WordPress Packages)

####################################################################################################
#### A. SS-Install-WordPress-Packages: Source SS-Config + SS-Functions #############################
####################################################################################################

## before anything else we must source the critical variables that power this script ##
## ss-config is setup during ss-install wizard but ss-functions is hardcoded ##

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### B. SS-Install-WordPress-Packages: Touch Timestamp File ########################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

ss_touch "${TIMESTAMP_SS_INSTALL_WORDPRESS_PACKAGES}"

####################################################################################################
#### C. SS-Install-WordPress-Packages: Message (Begin Script) ######################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be seen by sudo users who manually run this script in the shell ##

ss_echo "${COLOR_INFO}Running ss-install-wordpress-packages... ${COLOR_RESET}"

####################################################################################################
#### D. SS-Install-WordPress-Packages: Install Ubuntu Utils ########################################
####################################################################################################

source "${PATH_SS_INSTALL_UBUNTU_UTILS}"

####################################################################################################
#### E. SS-Install-WordPress-Packages: Retrieve WordPress Core Zip File ############################
####################################################################################################

## CMS modules are installed by SlickStack via files from our public mirror servers ##
## we always install the latest stable minor version (never major versions) ##

ss_wget "${TMP_WORDPRESS_ZIP}" "${REMOTE_WORDPRESS_ZIP}"

####################################################################################################
#### F. SS-Install-WordPress-Packages: Install WordPress Core (Production) #########################
####################################################################################################

## this installation process removes outdated WordPress Core files or potential malware ##
## it is not foolproof but it should address several common infection targets ##

if [[ -f "${TMP_WORDPRESS_ZIP}" ]]; then

## delete old files ##
ss_rm /var/www/html/wp-admin
ss_rm /var/www/html/wp-includes
find /var/www/html/ -maxdepth 1 -type f ! -name "wp-config.php" -name "*.php" -delete 

## prepare new files ##
ss_cp "${TMP_WORDPRESS_ZIP}" /var/www/html
ss_unzip /var/www/html/wordpress.zip -d /var/www/html
ss_chown "${SFTP_USER}":slickstack /var/www/html/wordpress
ss_chmod 0775 /var/www/html/wordpress

## delete stock extensions ##
ss_rm /var/www/html/wordpress/wp-content/plugins/akismet
ss_rm /var/www/html/wordpress/wp-content/plugins/hello.php
ss_rm /var/www/html/wordpress/wp-content/themes/twenty*

## install new files ##
ss_rsync /var/www/html/wordpress/* /var/www/html

## delete tmp files in public dir only ##
ss_rm /var/www/html/wordpress
ss_rm /var/www/html/wordpress.zip*
## end if ##
fi

## unreliable 
## sudo -u "${SFTP_USER}" /usr/local/bin/wp core download --path=/var/www/html --locale="${SS_LANGUAGE}" --skip-content --force

## core checksums ##
sudo -u "${SFTP_USER}" /usr/local/bin/wp --path=/var/www/html core verify-checksums

####################################################################################################
#### G. SS-Install-WordPress-Packages: Install WordPress Core (Staging) ############################
####################################################################################################

## this installation process removes outdated WordPress Core files or potential malware ##
## it is not foolproof but it should address several common infection targets ##

if [[ "${STAGING_SITE}" == "true" ]]; then 

if [[ -f "${TMP_WORDPRESS_ZIP}" ]]; then

## delete old files ##
ss_rm /var/www/html/staging/wp-admin
ss_rm /var/www/html/staging/wp-includes
find /var/www/html/staging/ -maxdepth 1 -type f ! -name "wp-config.php" -name "*.php" -delete 

## prepare new files ##
ss_cp "${TMP_WORDPRESS_ZIP}" /var/www/html/staging
ss_unzip /var/www/html/staging/wordpress.zip -d /var/www/html/staging
ss_chown "${SFTP_USER}":slickstack /var/www/html/staging/wordpress
ss_chmod 0775 /var/www/html/staging/wordpress

## delete stock extensions ##
ss_rm /var/www/html/staging/wordpress/wp-content/plugins/akismet
ss_rm /var/www/html/staging/wordpress/wp-content/plugins/hello.php
ss_rm /var/www/html/staging/wordpress/wp-content/themes/twenty*

## install new files ##
ss_rsync /var/www/html/staging/wordpress/* /var/www/html/staging
    
## delete tmp files in staging dir only ##
ss_rm /var/www/html/staging/wordpress
ss_rm /var/www/html/staging/wordpress.zip*

## end if ##
fi

## unreliable
## sudo -u "${SFTP_USER}" /usr/local/bin/wp core download --path=/var/www/html/staging --locale="${SS_LANGUAGE}" --skip-content --force
    
## end parent if ##
fi

####################################################################################################
#### H. SS-Install-WordPress-Packages: Install WordPress Core (Development) ########################
####################################################################################################

## this installation process removes outdated WordPress Core files or potential malware ##
## it is not foolproof but it should address several common infection targets ##

if [[ "${DEV_SITE}" == "true" ]]; then 

if [[ -f "${TMP_WORDPRESS_ZIP}" ]]; then

## delete old files ##
ss_rm /var/www/html/dev/wp-admin
ss_rm /var/www/html/dev/wp-includes
find /var/www/html/dev/ -maxdepth 1 -type f ! -name "wp-config.php" -name "*.php" -delete 

## prepare new files ##
ss_cp "${TMP_WORDPRESS_ZIP}" /var/www/html/dev
ss_unzip /var/www/html/dev/wordpress.zip -d /var/www/html/dev
ss_chown "${SFTP_USER}":slickstack /var/www/html/dev/wordpress
ss_chmod 0775 /var/www/html/dev/wordpress

## delete stock extensions ##
ss_rm /var/www/html/dev/wordpress/wp-content/plugins/akismet
ss_rm /var/www/html/dev/wordpress/wp-content/plugins/hello.php
ss_rm /var/www/html/dev/wordpress/wp-content/themes/twenty*

## install new files ##
ss_rsync /var/www/html/dev/wordpress/* /var/www/html/dev
    
## delete tmp files in dev dir only ##
ss_rm /var/www/html/dev/wordpress
ss_rm /var/www/html/dev/wordpress.zip*
    
## end if ##
fi

## unreliable
## sudo -u "${SFTP_USER}" /usr/local/bin/wp core download --path=/var/www/html/dev --locale="${SS_LANGUAGE}" --skip-content --force
    
## end parent if ##
fi

####################################################################################################
#### I. SS-Install-WordPress-Packages: Install HoverCraft WordPress Theme ##########################
####################################################################################################

source "${PATH_SS_INSTALL_WORDPRESS_HOVERCRAFT}"

####################################################################################################
#### J. SS-Install-WordPress-Packages: Populate Production Database (Conditional) ##################
####################################################################################################

## minimum wp_options required to avoid /wp-admin/install.php redirect are below: ##
## home/siteurl, blogname, admin_user, admin_email, admin_password ##

# QUERY_PRODUCTION_WP_OPTIONS_EXIST=$(ss_mysql_root --execute "SHOW TABLES FROM ${DB_NAME} WHERE Tables_in_${DB_NAME} LIKE '${DB_PREFIX}options';")
# GREP_WP_OPTIONS_STRING_PRODUCTION=$(echo "${QUERY_PRODUCTION_WP_OPTIONS_EXIST}" | ss_grep_boolean "${DB_PREFIX}"options)

## populate wp_options if not exists ##
# if [[ -z "${GREP_WP_OPTIONS_STRING_PRODUCTION}" ]]; then
#    /usr/bin/php -qCr "include '/var/www/html/wp-admin/install.php'; wp_install('SlickStack', '\"${SFTP_USER}\"', '\"${SFTP_USER}\"@\"${SITE_DOMAIN_EXCLUDING_WWW}\"', 1, '', \"${SFTP_PASSWORD}\", 'en_US');"
#    ss_mysql_root --execute="UPDATE ${DB_PREFIX}options SET option_value='Lightning-fast WordPress on Nginx' WHERE option_name='blogdescription';"
# fi

## https://developer.wordpress.org/cli/commands/core/is-installed/
## https://developer.wordpress.org/cli/commands/core/install/
## https://wordpress.stackexchange.com/questions/424412/which-wp-cli-commands-can-be-safely-run-with-allow-root-flag
## https://wordpress.stackexchange.com/questions/376682/how-can-i-use-wp-cli-commands-without-allow-root/424586#424586
## https://johnkpaul.tumblr.com/post/19841381351/su-vs-sudo-su-vs-sudo-u-i

if ! sudo -u "${SFTP_USER}" /usr/local/bin/wp core is-installed --path=/var/www/html 2>/dev/null; then
    sudo -u "${SFTP_USER}" /usr/local/bin/wp core install --path=/var/www/html --url="${SITE_FULL_DOMAIN}" --title=SlickStack --admin_user="${SFTP_USER}" --admin_password="${SFTP_PASSWORD}" --admin_email="${SFTP_USER}"@"${SITE_DOMAIN_EXCLUDING_WWW}" --locale="${SS_LANGUAGE}" --skip-email 
fi

####################################################################################################
#### K. SS-Install-WordPress-Packages: Populate Development Database (Conditional) #################
####################################################################################################

## minimum wp_options required to avoid /wp-admin/install.php redirect are below: ##
## home/siteurl, blogname, admin_user, admin_email, admin_password ##

## populate wp_options if not exists ##
# if [[ "${DEV_SITE}" == "true" ]]; then
#    QUERY_DEVELOPMENT_WP_OPTIONS_EXIST=$(ss_mysql_root --execute "SHOW TABLES FROM development WHERE Tables_in_development LIKE '${DB_PREFIX}options';" 2> /dev/null)
#    GREP_WP_OPTIONS_STRING_DEVELOPMENT=$(echo "${QUERY_DEVELOPMENT_WP_OPTIONS_EXIST}" | ss_grep_boolean "${DB_PREFIX}"options)
#    ## populate wp_options if not exists ##
#    if [[ -z "${GREP_WP_OPTIONS_STRING_DEVELOPMENT}" ]]; then
#        /usr/bin/php -qCr "include '/var/www/html/dev/wp-admin/install.php'; wp_install('SlickStack', '\"${SFTP_USER}\"', '\"${SFTP_USER}\"@\"${SITE_DOMAIN_EXCLUDING_WWW}\"', 1, '', \"${SFTP_PASSWORD}\", 'en_US');"
#        ss_mysql_root --execute="UPDATE ${DB_PREFIX}options SET option_value='Lightning-fast WordPress on Nginx' WHERE option_name='blogdescription';"
#    fi
# fi

## https://developer.wordpress.org/cli/commands/core/is-installed/
## https://developer.wordpress.org/cli/commands/core/install/
## https://wordpress.stackexchange.com/questions/424412/which-wp-cli-commands-can-be-safely-run-with-allow-root-flag
## https://wordpress.stackexchange.com/questions/376682/how-can-i-use-wp-cli-commands-without-allow-root/424586#424586
## https://johnkpaul.tumblr.com/post/19841381351/su-vs-sudo-su-vs-sudo-u-i

if [[ "${DEV_SITE}" == "true" ]]; then
    if ! sudo -u "${SFTP_USER}" /usr/local/bin/wp core is-installed --path=/var/www/html/dev 2>/dev/null; then
        sudo -u "${SFTP_USER}" /usr/local/bin/wp core install --path=/var/www/html/dev --url=dev."${SITE_DOMAIN_EXCLUDING_WWW}" --title=SlickStack --admin_user="${SFTP_USER}" --admin_password="${SFTP_PASSWORD}" --admin_email="${SFTP_USER}"@"${SITE_DOMAIN_EXCLUDING_WWW}" --locale="${SS_LANGUAGE}" --skip-email 
    fi
fi

####################################################################################################
#### K. SS-Install-WordPress-Packages: Modify Site Domains In Database #############################
####################################################################################################

## here we manually fix certain fields in the database to ensure proper functionality ##
## this fix required for WP Multisite (wp-config.php enough for single sites) ##

## SNIPPET: ss-install-wordpress-config, ss-install-wordpress-packages
## UPDATED: 19MAR2024

## production ##
if [[ -n $(ss_mysql_root --execute "SHOW TABLES FROM ${DB_NAME} WHERE Tables_in_${DB_NAME} LIKE '${DB_PREFIX}options';" 2> /dev/null) ]]; then
    
    ss_mysql_root --execute="UPDATE ${DB_NAME}.${DB_PREFIX}options SET option_value='https://${SITE_FULL_DOMAIN}' WHERE option_name='home'";
    ss_mysql_root --execute="UPDATE ${DB_NAME}.${DB_PREFIX}options SET option_value='https://${SITE_FULL_DOMAIN}' WHERE option_name='siteurl'";
    
fi

## staging ##
if [[ "${STAGING_SITE}" == "true" ]]; then 
    
    if [[ -n $(ss_mysql_root --execute "SHOW TABLES FROM staging WHERE Tables_in_staging LIKE '${DB_PREFIX}options';" 2> /dev/null) ]]; then
    
        ss_mysql_root --execute="UPDATE staging.${DB_PREFIX}options SET option_value='https://staging.${SITE_DOMAIN_EXCLUDING_WWW}' WHERE option_name='home'";
        ss_mysql_root --execute="UPDATE staging.${DB_PREFIX}options SET option_value='https://staging.${SITE_DOMAIN_EXCLUDING_WWW}' WHERE option_name='siteurl'";
    fi
    
fi

## development ##
if [[ "${DEV_SITE}" == "true" ]]; then 
    
    if [[ -n $(ss_mysql_root --execute "SHOW TABLES FROM development WHERE Tables_in_development LIKE '${DB_PREFIX}options';" 2> /dev/null) ]]; then
    
        ss_mysql_root --execute="UPDATE development.${DB_PREFIX}options SET option_value='https://dev.${SITE_DOMAIN_EXCLUDING_WWW}' WHERE option_name='home'";
        ss_mysql_root --execute="UPDATE development.${DB_PREFIX}options SET option_value='https://dev.${SITE_DOMAIN_EXCLUDING_WWW}' WHERE option_name='siteurl'";
    fi

fi

####################################################################################################
#### L. SS-Install-WordPress-Packages: Sync Production Database To Staging #########################
####################################################################################################

## we include the sync to staging while installing WordPress Core to avoid blank sites ##
## otherwise the staging site files/database would potentially display broken ##

source "${PATH_SS_SYNC_STAGING}"

####################################################################################################
#### M. SS-Install-WordPress-Packages: Cleanup Temporary Files #####################################
####################################################################################################

ss_rm "${TMP_WORDPRESS_ZIP}"

####################################################################################################
#### N. SS-Install-WordPress-Packages: Purge Cache (PHP OPcache) ###################################
####################################################################################################

source "${PATH_SS_PURGE_OPCACHE}"

####################################################################################################
#### O. SS-Install-WordPress-Packages: Reset Permissions (WordPress Packages) ######################
####################################################################################################

source "${PATH_SS_PERMS_WORDPRESS_PACKAGES}"

####################################################################################################
#### SlickStack: Reset Permissions (SlickStack Scripts) ############################################
####################################################################################################

## we include this permissions reset in all cron jobs and bash scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute any SlickStack scripts ##

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS
## SNIPPET: ss bash scripts, ss cron jobs
## UPDATED: 02JUL2022

chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chown root:root /var/www/crons/custom/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/custom/*cron* ## 0700 means only root/sudo can execute

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://github.com/littlebizzy/throwaway-theme/blob/master/functions.php
## Ref: https://pressidium.com/blog/2020/wordpress-image-sizes-explained/
## Ref: https://developer.wordpress.org/cli/commands/core/install/
## Ref: https://www.linuxtweaks.in/how-to-install-wordpress-using-bash-script-and-wp-cli/
## Ref: https://stackoverflow.com/questions/10062513/install-wordpress-using-bash-shell-without-visiting-wp-admin-install-php
## Ref: https://serverascode.com/2014/06/22/automated-wordpress-database-deployment.html
## Ref: https://web.archive.org/web/20140711110900/http://www.openlogic.com/wazi/bid/324425/How-to-install-WordPress-from-the-command-line
## Ref: https://wordpress.org/support/article/how-to-install-wordpress/
## Ref: https://stackoverflow.com/questions/6781225/how-do-i-check-if-a-directory-has-child-directories/6781343
## Ref: https://www.cloudsavvyit.com/1081/check-a-value-in-a-mysql-database-from-a-linux-bash-script/
## Ref: https://www.php.net/manual/en/features.commandline.options.php
## Ref: https://stackoverflow.com/questions/33067909/bash-variable-under-a-mysql-query
## Ref: https://stackoverflow.com/questions/21526581/how-to-clear-hide-mysql-errors-from-command-prompt
## Ref: https://www.php.net/manual/en/features.commandline.options.php
## Ref: https://www.medo64.com/2016/07/random-blog-description-for-wordpress/
## Ref: https://github.com/wp-cli/wp-cli/issues/1319
## Ref: https://stackoverflow.com/questions/20474685/increase-max-upload-file-size-wordpress-multisite
## Ref: https://wpscholar.com/blog/run-quick-security-check-via-wp-cli/

## SS_EOF
