#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: littlebizzy/slickstack/blob/master/bash/ss-perms-nginx-config.txt #####################
#### path: /var/www/ss-perms-nginx-config ##########################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Resets file and user permissions for Nginx module configuration files ################
#### module version: Nginx 1.18.x ##################################################################
#### sourced by: ss-perms, ss-install-nginx-config #################################################
####################################################################################################

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### TABLE OF CONTENTS (SS-Perms-Nginx-Config) #####################################################
####################################################################################################

## this is a brief summary of the different code snippets you will find in this script ##
## each section should be commented so you understand what is being accomplished ##

## A. Change To Default Directory
## B. Touch Timestamp File
## C. Message (Begin Script)
## D. Reset Permissions (Nginx Config)
## E. Reset Permissions (SSL Certificates)

####################################################################################################
#### B. SS-Perms-Nginx-Config: Touch Timestamp File ################################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

ss_touch "${TIMESTAMP_SS_PERMS_NGINX_CONFIG}"

####################################################################################################
#### C. SS-Perms-Nginx-Config: Message (Begin Script) ##############################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be seen by sudo users who manually run this script in the shell ##

ss_echo "${COLOR_INFO}Running ss-perms-nginx-config... ${COLOR_RESET}"

####################################################################################################
#### D. SS-Perms-Nginx-Config: Reset Permissions (Nginx Config) ####################################
####################################################################################################

## although all permissions are reset in ss-perms we do it on per-module basis as well ##
## this ensures correct permissions in case this script is run individually etc ##

## create directories if not exist ##
ss_mkdir /var/www/cache/nginx
ss_mkdir /var/www/html
ss_mkdir /var/www/logs
ss_mkdir /var/www/meta
ss_mkdir /var/www/sites
ss_mkdir /var/www/sites/includes
ss_mkdir /var/www/sites/error_pages

## create htpasswd file if not exists ##
ss_touch /var/www/meta/.htpasswd

## chown dirs ##
ss_chown www-data:www-data /var/www/cache/nginx ## must be www-data:www-data
chown "${SFTP_USER}":slickstack /var/www/html ## must be SFTP_USER:slickstack
chown www-data:www-data /var/www/logs ## must be www-data:www-data
chown www-data:www-data /var/www/meta ## must be www-data:www-data
chown root:root /var/www/certs
chown root:root /var/www/certs/keys

## chown files ##
ss_chown root:root /etc/nginx/fastcgi.conf
ss_chown root:root /etc/nginx/nginx.conf
ss_chown root:root /var/www/sites
ss_chown root:root /var/www/sites/includes
ss_chown root:root /var/www/sites/error_pages
chown www-data:www-data /var/www/meta/.htpasswd ## must be www-data:www-data

## chmod dirs ##
chmod 0755 /var/www/cache/nginx ## 0755 seems enough
chmod 0775 /var/www/html ## must be 0775 (0755 not enough)
chmod 0775 /var/www/logs ## 0755 should also work
chmod 0775 /var/www/meta ## 0755 should also work
ss_chmod 0775 /var/www/sites ## 0755 should also work
ss_chmod 0775 /var/www/sites/includes ## 0755 should also work
ss_chmod 0775 /var/www/sites/error_pages ## 0755 should also work

## chmod files ##
ss_chmod 0644 /var/www/meta/.htpasswd ## 0644 seems enough

## create log files if not exist ##
if [ ! -f "/var/www/logs/nginx-error.log" ]; then ss_touch "/var/www/logs/nginx-error.log"; fi
if [ ! -f "/var/www/logs/nginx-access.log" ]; then ss_touch "/var/www/logs/nginx-access.log"; fi

## reset permissions ##
ss_chown www-data:www-data /var/www/logs/nginx*.log
ss_chmod 0644 /var/www/logs/nginx*.log ## 0755 should also work

## ADD perms for Nginx submodules here... Adminer, etc ##
## DO IT HERE

####################################################################################################
#### C. SS-Perms-Nginx-SSL: Reset Permissions (SSL Certificates) ###################################
####################################################################################################

#### module version: Nginx 1.18.x, OpenSSL 3.0.x, Certbot 1.21.x ###################################

## although all permissions are reset in ss-perms we do it on per-module basis as well ##
## this ensures correct permissions in case this script is run individually etc ##

## create directories if not exist ##
ss_mkdir /var/www/certs
ss_mkdir /var/www/certs/keys
ss_mkdir /var/www/html/.well-known ## certbot
ss_mkdir /var/www/html/.well-known/acme-challenge ## certbot
ss_mkdir /var/www/sites/includes

## chown dirs ##
ss_chown root:root /var/www/certs ## must be root:root
ss_chown root:root /var/www/certs/keys ## must be root:root
chown www-data:www-data /var/www/logs ## must be www-data:www-data
chown www-data:www-data /var/www/meta ## must be www-data:www-data
ss_chown "${SFTP_USER}":www-data /var/www/html/.well-known ## must be SFTP_USER:www-data
ss_chown "${SFTP_USER}":www-data /var/www/html/.well-known/acme-challenge ## must be SFTP_USER:www-data
ss_chown root:root /var/www/sites/includes

## chmod dirs ##
chmod 0755 /var/www/certs ## must be 0755
chmod 0700 /var/www/certs/keys ## must be 0700
chmod 0775 /var/www/html/.well-known ## must be 0775 because accessed by server for e.g. Cerbot but also by SFTP user for things like Stripe ##
chmod 0775 /var/www/html/.well-known/acme-challenge ## must be 0775
chmod 0755 /var/www/sites/includes

## chmod slickstack symlinks ##
find /var/www/certs -type f -exec chmod 0644 {} \; ## public certs/dhparam should be 0644
find /var/www/certs/keys -type f -exec chmod 0600 {} \; ## must be 0600

## (overwrites above) chmod lets encrypt symlinks which are pointed from slickstack symlinks ##
## find /etc/letsencrypt/live/slickstack -type f -exec chmod 0644 {} \; ## public certs/dhparam should be 0644
## find /etc/letsencrypt/live/slickstack/keys -type f -exec chmod 0600 {} \; ## must be 0600

## (overwrites above) chmod lets encrypt hardfiles ##
## find /etc/letsencrypt/archive/slickstack -type f -exec chmod 0644 {} \; ## public certs/dhparam should be 0644
## find /etc/letsencrypt/archive/slickstack/keys -type f -exec chmod 0600 {} \; ## must be 0600

####################################################################################################
#### SlickStack: Reset Permissions (SlickStack Scripts) ############################################
####################################################################################################

## we include this permissions reset in all cron jobs and bash scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute any SlickStack scripts ##

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS
## SNIPPET: ss bash scripts, ss cron jobs
## UPDATED: 02JUL2022

chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chown root:root /var/www/crons/custom/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/custom/*cron* ## 0700 means only root/sudo can execute

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://stackoverflow.com/questions/41736236/nginx-configuration-permissions-and-ownership
## Ref: https://unix.stackexchange.com/questions/87200/change-permissions-for-a-symbolic-link
## Ref: https://serverfault.com/questions/939682/lets-encrypt-certificate-permissions
## Ref: https://community.letsencrypt.org/t/recommended-permissions-on-files-distributed-by-lets-encrypt/104266
## Ref: https://stackoverflow.com/questions/48868479/how-to-chmod-all-files-in-sub-directories-without-chmod-the-folders
## Ref: https://www.freecodecamp.org/news/linux-ln-how-to-create-a-symbolic-link-in-linux-example-bash-command/

## SS_EOF
